{"version":3,"file":"static/js/125.4d72c4dc.chunk.js","mappings":"iPAQMA,EAAa,IAAIC,EAAAA,KAAK,CAC1BC,QAASC,EAAQ,QAkDnB,UA/C+B,WAC7B,IAAAC,GAA4BC,EAAAA,EAAAA,GAAS,CACnCC,SAAU,CAAC,YACXC,QAAS,kBAAMC,MATH,4CASkBC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,GAAC,IAFjDC,EAAIR,EAAJQ,KAKR,OALuBR,EAATS,WAMLC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAIdC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0EAAyED,SAAC,6BAGxFF,EAAAA,EAAAA,MAACI,EAAAA,EAAY,CACXC,OAAQ,CAAC,GAAI,GACbC,KAAM,EACNC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAAUP,SAAA,EAE1CJ,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,IAAI,qDACJC,YAAY,0FAEbhB,EAAKiB,KAAI,SAACC,GAAY,OACrBhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAELC,KAAMhC,EACNiC,SAAU,CAACH,EAAQI,YAAYC,IAAKL,EAAQI,YAAYE,MAAMlB,UAE9DJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAAAnB,UACJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,gCAA+BD,SAAA,CAAC,YAClCY,EAAQA,YAEpBd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,uBAAqBY,EAAQQ,WAChCtB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,0BAAwBY,EAAQS,cACnCvB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iBAAeY,EAAQU,gBAXzBV,EAAQA,QAcN,SAKnB,C","sources":["Component/ChartComponet/CountryGraph.tsx"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport \"leaflet/dist/leaflet.css\";\nimport Loader from \"../Loading/Loader\";\nimport { Icon } from \"leaflet\";\nconst baseUrl = \"https://disease.sh/v3/covid-19/countries\";\n\nconst customICon = new Icon({\n  iconUrl: require(\"./marker-icon.png\"),\n});\n\nconst CountryGraph: React.FC = () => {\n  const { data, isLoading } = useQuery({\n    queryKey: [\"repoData\"],\n    queryFn: () => fetch(baseUrl).then((res) => res.json()),\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <h2 className=\"text-center my-3 capitalize font-semibold text-[1.2rem] text-orange-500\">\n        Covid-19 worldwide Data\n      </h2>\n      <MapContainer\n        center={[20, 0]}\n        zoom={2}\n        style={{ width: \"100%\", height: \"500px\" }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {data.map((country: any) => (\n          <Marker\n            key={country.country}\n            icon={customICon}\n            position={[country.countryInfo.lat, country.countryInfo.long]}\n          >\n            <Popup>\n              <div>\n                <h2 className=\"text-orange-400 font-semibold\">\n                  Country: {country.country}\n                </h2>\n                <p>Total Active Cases: {country.active}</p>\n                <p>Total Recovered Cases: {country.recovered}</p>\n                <p>Total Deaths: {country.deaths}</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n};\n\nexport default CountryGraph;\n"],"names":["customICon","Icon","iconUrl","require","_useQuery","useQuery","queryKey","queryFn","fetch","then","res","json","data","isLoading","_jsx","Loader","_jsxs","_Fragment","children","className","MapContainer","center","zoom","style","width","height","TileLayer","url","attribution","map","country","Marker","icon","position","countryInfo","lat","long","Popup","active","recovered","deaths"],"sourceRoot":""}